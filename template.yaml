AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: Daily Contract Lambda Stack

Resources:
 
  # DailyContractTable:
  #   Type: AWS::DynamoDB::Table
  #   Properties:
  #     TableName: Daily-Contract-Data
  #     AttributeDefinitions:
  #       - AttributeName: date
  #         AttributeType: S # String
  #       - AttributeName: strike
  #         AttributeType: S # String
  #     KeySchema:
  #       - AttributeName: date
  #         KeyType: HASH # Partition Key
  #       - AttributeName: strike
  #         KeyType: RANGE # Sort Key
  #     BillingMode: PAY_PER_REQUEST # On-demand billing mode
  #     SSESpecification:
  #       SSEEnabled: true # Enable server-side encryption
      


  DailyContractLambda:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: DailyContractLambda
      Handler: io.quarkus.amazon.lambda.runtime.QuarkusStreamHandler::handleRequest
      Runtime: java17 # Update if you're using a different Java runtime
      CodeUri: ./target/function.zip # Path to your compiled JAR file
      MemorySize: 512
      Timeout: 30
      # Remove hardcoded role - let SAM create one automatically
      # Role: arn:aws:iam::${AWS::AccountId}:role/expense-manager-lambda-delegate-admin
      Policies:
        - AWSLambdaBasicExecutionRole
        # Add any additional policies your Lambda needs here
                                              
  
  ScheduleRule:
    Type: AWS::Events::Rule
    Properties:
      Name: DailyContractLambda-Trigger
      ScheduleExpression: cron(30 17 * * ? *)
      State: DISABLED
      Targets:
        - Id: DailyContractLambdaInvoke
          Arn: !GetAtt DailyContractLambda.Arn
  
  DailyContractLambdaEventBridgePermission:
    Type: AWS::Lambda::Permission
    Properties:
      FunctionName: !GetAtt DailyContractLambda.Arn
      Action: lambda:InvokeFunction
      Principal: events.amazonaws.com
      SourceArn: !GetAtt ScheduleRule.Arn
          

Outputs:
  DailyContractLambdaArn:
    Description: "ARN of the Lambda function"
    Value: !GetAtt DailyContractLambda.Arn
    Export:
      Name: !Sub "${AWS::StackName}-DailyContractLambdaArn"
  
  DailyContractLambdaName:
    Description: "Name of the Lambda function"
    Value: !Ref DailyContractLambda
    Export:
      Name: !Sub "${AWS::StackName}-DailyContractLambdaName"
          
